apiVersion: v1
kind: Namespace
metadata:
  name: echo
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: echo
  namespace: echo
spec:
  replicas: 3
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: echo
  template:
    metadata:
      name: echo
      labels:
        app: echo
    spec:
      containers:
      - name: echo-srv
        image: ginuerzh/echo:0.0.2
        imagePullPolicy: Always
        ports:
        - name: grpc
          containerPort: 8080
          protocol: TCP
        readinessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
        livenessProbe:
          periodSeconds: 10
          initialDelaySeconds: 5
          exec:
            command: ["/bin/grpc_health_probe", "-addr=:8080"]
      - name: echo-gw
        image: ginuerzh/echo:0.0.2
        imagePullPolicy: Always
        command:
        - /app/echo-gw
        ports:
        - name: web
          containerPort: 8000
          protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: echo
  namespace: echo
spec:
  selector:
    app: echo
  ports:
  - name: grpc
    port: 8080
    targetPort: grpc
  - name: web
    port: 8000
    targetPort: web
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: echo
  namespace: echo
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: example.com
    http:
      paths:
      - path: /api/v1/echo
        backend:
          serviceName: echo
          servicePort: web
